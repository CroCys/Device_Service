version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: device_service_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ggD3v1c3
      POSTGRES_DB: devices_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d devices_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: device_service_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["redis-server", "--requirepass", "ggD3v1c3"]

  minio:
    image: minio/minio:latest
    container_name: device_service_minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ggD3v1c3
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build: .
    container_name: device_service_app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: prod
    volumes:
      - app_logs:/var/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
  app_logs: